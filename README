NAME
    Sys::Cmd - run a system command or spawn a system processes

SYNOPSIS
        use Sys::Cmd qw/run spawn/;

        # Get command output, raise exception on failure:
        $output = run(@cmd);

        # Feed command some input, get output as lines,
        # raise exception on failure:
        @output = run(@cmd, { input => 'feedme' });

        # Spawn and interact with a process with special environment:
        $proc = spawn( @cmd, { dir => '/' , encoding => 'iso-8859-3'} );

        while (my $line = $proc->stdout->getline) {
            $proc->stdin->print("thanks");
        }

        my @errors = $proc->stderr->getlines;
        $proc->close();     # Done!

        # read exit information
        $proc->exit();      # exit status
        $proc->signal();    # signal
        $proc->core();      # core dumped? (boolean)

DESCRIPTION
    Sys::Cmd lets you run system commands and capture their output, or spawn
    and interact with a system process through its "STDIN", "STDOUT", and
    "STDERR" file handles.

INSTALLATION

    To install this module type the following:

        perl Makefile.PL
        make
        make test
        make install

SEE ALSO
    Sys::Cmd::Template

ALTERNATIVES
    System::Command, Proc::Spawn, IPC::Run, IPC::Cmd, Spawn::Safe

SUPPORT
    Bug Reporting
            https://rt.cpan.org/Public/Bug/Report.html?Queue=Sys-Cmd

    Source Code
            git clone git://github.com/mlawren/sys-cmd.git

AUTHOR
    Mark Lawrence <nomad@null.net>, based heavily on
    Git::Repository::Command by Philippe Bruhat (BooK).

COPYRIGHT AND LICENSE
    Copyright 2011 Mark Lawrence <nomad@null.net>

    This program is free software; you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by the
    Free Software Foundation; either version 3 of the License, or (at your
    option) any later version.

